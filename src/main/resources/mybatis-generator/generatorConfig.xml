<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
       <!--导入属性配置 -->
       <properties  resource="mybatis-generator/c3p0.properties"></properties>
       <!-- 数据库驱动包位置 -->
       <classPathEntry location="E:/Program Files/apache-maven-3.3.3/lib/mysql-connector-java-5.1.8.jar"/>

       <context id="DB2Tables" targetRuntime="MyBatis3" defaultModelType="flat">
              <!-- optional，旨在创建class时，对注释进行控制 -->
              <commentGenerator>
                  <!--阻止生成的注释包含时间戳-->
                  <property name="suppressDate" value="false"/>
                  <!--去掉自动生成的注释-->
                  <property name="suppressAllComments" value="false"/>
              </commentGenerator>

              <!-- 数据库链接URL、用户名、密码 -->
              <!--jdbc的数据库连接 -->
              <jdbcConnection driverClass="${c3p0.driverClass}" connectionURL="${c3p0.jdbcUrl}"
                              userId="${c3p0.user}" password="${c3p0.password}">
              </jdbcConnection>

              <!-- 非必需，类型处理器，在数据库类型和java类型之间的转换控制-->
              <javaTypeResolver>
                     <property name="forceBigDecimals" value="false"/>
              </javaTypeResolver>

              <!-- Model模型生成器,用来生成含有主键key的类，记录类 以及查询Example类
            targetPackage     指定生成的model生成所在的包名
            targetProject     指定在该项目下所在的路径
        -->
              <javaModelGenerator targetPackage="com.springapp.mvc.model" targetProject="src/main/java">
                     <!-- 是否允许子包，即targetPackage.schemaName.tableName -->
                     <property name="enableSubPackages" value="true"/>
                     <!-- 是否对类CHAR类型的列的数据进行trim操作 -->
                     <property name="trimStrings" value="true"/>
                     <!-- 是否对model添加 构造函数 -->
                     <property name="constructorBased" value="true"/>
                  <!-- 建立的Model对象是否 不可改变  即生成的Model对象不会有 setter方法，只有构造方法 -->
                  <property name="immutable" value="false"/>
              </javaModelGenerator>
              <!-- -Mapper映射文件生成所在的目录 为每一个数据库的表生成对应的SqlMap xml文件 -->
              <sqlMapGenerator  targetPackage="com.springapp.mvc.mapper" targetProject="src/main/java">
                     <property name="enableSubPackages" value="false"/>
              </sqlMapGenerator>

              <!-- 生成Map的包名和位置 应用接口的生成信息 -->
           <!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码
                type="ANNOTATEDMAPPER",生成Java Model 和基于注解的Mapper对象
                type="MIXEDMAPPER",生成基于注解的Java Model 和相应的Mapper对象
                type="XMLMAPPER",生成SQLMap XML文件和独立的Mapper接口
        -->
              <javaClientGenerator type="MIXEDMAPPER" targetPackage="com.springapp.mvc.mapper" targetProject="src/main/java">
                     <property name="enableSubPackages" value="true"/>
              </javaClientGenerator>

              <!-- 要生成那些表(更改tableName和domainObjectName就可以) -->
              <table tableName="t_user" domainObjectName="Tuser"
                     enableCountByExample="false" enableUpdateByExample="false"
                     enableDeleteByExample="false" enableSelectByExample="false"
                     selectByExampleQueryId="false"/>
       </context>
</generatorConfiguration>